@model IEnumerable<Taxonomy>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <button class="button-73 text-decoration-none" role="button">  <a asp-action="Create">Create New</a></button>

   
</p>
<table class="table sorting table-bordered" id="pages ">
    <thead>
        <tr class="home">

            <th>
                Name
            </th>
            <th>
                Slug
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr id="id_@item.Id" class="@item.Slug">

                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Slug)
                </td>

                <td>

                    <button class="button-68" role="button">  <a asp-action="Edit" asp-route-id="@item.Id">Edit </a> </button>



                    <button class="button-68" role="button"> <a asp-action="Details" asp-route-id="@item.Id">Details </a></button>

                    

                    <button class="button-24 text-decoration-none" role="button"> <a class="confirmDeletion" asp-action="Delete" asp-route-id="@item.Id">Delete</a></button>




                </td>
            </tr>
        }
    </tbody>
</table>



@section Scripts {
    <script>
        $("table#taxonomies tbody").sortable({
            items: "tr:not(.home)",
            placeholder: "ui-state-highlight",
            update: function () {
                let ids = $("table#taxonomies tbody").sortable("serialize");
                let url = "/admin/taxonomies/reorder";
                $.post(url, ids, function () { });
            }
        })
    </script>
}